cmake_minimum_required(VERSION 2.6)

project (user_manage CXX)

set(USER_MANAGE_HEADERS user_manage.h)

set(PROJECT_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
set(USER_MANAGE_CODEGEN_DIR "${PROJECT_BINARY_DIR}/codegen")

PREPEND(USER_MANAGE_HEADERS_PATHS ${PROJECT_SOURCE_DIR} ${USER_MANAGE_HEADERS})

CODEGEN_FILES(USER_MANAGE_CODEGEN_SOURCES ${USER_MANAGE_CODEGEN_DIR} ${USER_MANAGE_HEADERS})

add_custom_command(OUTPUT ${USER_MANAGE_CODEGEN_SOURCES}
    COMMAND ${NGREST_BIN_PATH}ngrestcg -i "${PROJECT_SOURCE_DIR}" -o ${USER_MANAGE_CODEGEN_DIR} -t service ${USER_MANAGE_HEADERS}
    DEPENDS ${USER_MANAGE_HEADERS_PATHS}
)

file(GLOB USER_MANAGE_SOURCES ${PROJECT_SOURCE_DIR}/*.cpp)

list(APPEND USER_MANAGE_SOURCES ${USER_MANAGE_CODEGEN_SOURCES})

include_directories(${PROJECT_SOURCE_DIR} $ENV{NGREST_EXT_INCLUDES})

add_library(user_manage MODULE ${USER_MANAGE_SOURCES})

set_target_properties(user_manage PROPERTIES PREFIX "")
set_target_properties(user_manage PROPERTIES
    LIBRARY_OUTPUT_DIRECTORY "${PROJECT_SERVICES_DIR}"
)

target_link_libraries(user_manage ngrestutils ngrestcommon ngrestjson ngrestengine $ENV{NGREST_EXT_LIBS} uuid hiredis sqlite3)
